// <auto-generated />
using System;
using CarRentalApi.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRentalApi.Infrastructure.Migrations
{
    [DbContext(typeof(CarRentalDbContext))]
    [Migration("20250512143642_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("CarRentalApi.Core.Entities.AdditionalFee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("FeeType")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("RentalId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RentalId");

                    b.ToTable("AdditionalFees");
                });

            modelBuilder.Entity("CarRentalApi.Core.Entities.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CarType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarRentalApi.Core.Entities.CarTypeEnumLookup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CarTypeEnumLookup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Premium"
                        },
                        new
                        {
                            Id = 2,
                            Name = "SUV"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Small"
                        });
                });

            modelBuilder.Entity("CarRentalApi.Core.Entities.CarTypePricing", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("BasePricePerDay")
                        .HasColumnType("TEXT");

                    b.Property<int>("CarType")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("DiscountAfter30Days")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DiscountAfter7Days")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExtraDayLateFee")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExtraDayLateFeeFormulaParam")
                        .HasColumnType("TEXT");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CarTypePricings");
                });

            modelBuilder.Entity("CarRentalApi.Core.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CarRentalApi.Core.Entities.Rental", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CarId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("FinalPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("InitialPrice")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsReturned")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LoyaltyPointsEarned")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("CarRentalApi.Core.Entities.AdditionalFee", b =>
                {
                    b.HasOne("CarRentalApi.Core.Entities.Rental", null)
                        .WithMany("AdditionalFees")
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CarRentalApi.Core.Entities.Rental", b =>
                {
                    b.Navigation("AdditionalFees");
                });
#pragma warning restore 612, 618
        }
    }
}
